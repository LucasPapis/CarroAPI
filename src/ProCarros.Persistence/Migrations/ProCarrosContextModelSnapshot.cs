// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProCarros.Persistence.Contextos;

namespace ProCarros.Persistence.Migrations
{
    [DbContext(typeof(ProCarrosContext))]
    partial class ProCarrosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ProCarros.Domain.Carro", b =>
                {
                    b.Property<int>("Id_carro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Dt_Fabricacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("FabricanteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nm_Carro")
                        .HasColumnType("TEXT");

                    b.Property<int>("Qtd_Porta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_carro");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("ProCarros.Domain.Fabricante", b =>
                {
                    b.Property<int>("Id_Fabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nm_Fabricante")
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Fabricante");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("ProCarros.Domain.Carro", b =>
                {
                    b.HasOne("ProCarros.Domain.Fabricante", "Fabricante")
                        .WithMany("Carros")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("ProCarros.Domain.Fabricante", b =>
                {
                    b.Navigation("Carros");
                });
#pragma warning restore 612, 618
        }
    }
}
